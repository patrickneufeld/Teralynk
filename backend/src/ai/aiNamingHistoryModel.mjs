import { logAuditEntry } from "../guardrails/AuditLogger.mjs";
import { isKillSwitchEnabled } from "../guardrails/KillSwitch.mjs";
// File: /backend/src/ai/models/aiNamingHistoryModel.js

import { DataTypes } from 'sequelize';
import sequelize from '../config/sequelizeClient.mjs';

/**
 * ai_naming_history table:
 * Stores records of filenames generated by the AI for learning purposes.
 * Supports context-aware learning, adaptive suggestions, and pattern training.
 */
const AiNamingHistoryModel = sequelize.define('ai_naming_history', {
  id: {
    type: DataTypes.UUID,
    defaultValue: DataTypes.UUIDV4,
    primaryKey: true,
  },

  user_id: {
    type: DataTypes.UUID,
    allowNull: false,
    comment: 'User ID who uploaded the file',
  },

  persona: {
    type: DataTypes.STRING,
    allowNull: true,
    comment: 'Inferred or provided user persona (e.g., developer, photographer)',
  },

  role: {
    type: DataTypes.STRING,
    allowNull: true,
    comment: 'Detected or declared user role (e.g., student, marketer)',
  },

  original_name: {
    type: DataTypes.STRING,
    allowNull: false,
    comment: 'Original filename provided by the user',
  },

  smart_name: {
    type: DataTypes.STRING,
    allowNull: false,
    comment: 'Filename suggested/generated by AI engine',
  },

  mime_type: {
    type: DataTypes.STRING,
    allowNull: true,
    comment: 'MIME type of the file',
  },

  tags: {
    type: DataTypes.ARRAY(DataTypes.STRING),
    allowNull: true,
    comment: 'Optional tags associated with the file upload',
  },

  context_metadata: {
    type: DataTypes.JSONB,
    allowNull: true,
    comment: 'Captured metadata used during name generation (e.g., timestamp, template, fileType)',
  },

  created_at: {
    type: DataTypes.DATE,
    defaultValue: DataTypes.NOW,
  },

  updated_at: {
    type: DataTypes.DATE,
    defaultValue: DataTypes.NOW,
  }
}, {
  tableName: 'ai_naming_history',
  timestamps: false, // manually handled
  indexes: [
    { fields: ['user_id'] },
    { fields: ['persona'] },
    { fields: ['role'] },
    { fields: ['smart_name'] },
  ],
});

export default AiNamingHistoryModel;
